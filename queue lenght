\\queue implementation in java
public class queue{

int queue leneght = 3;
int items [] = new int [queueLenght];
int front = -1;
int back = -1;

boolean isFull(){
   iF(back==queueLenght-1){
     retrun true;
   } else {
       retrun;false; 
   }
 }
 
boolean  isEmpty(){
     if(front == -1 && back == -1){
         retrun true;
     } else {
          retrun false;
          
     boolean isEmpty(){
         if(front == -1 && back == -1){
             retrun true;
          } else {
            retrun false;
          } 
     ) 
     
     
     void enQueue(int itemValue) {
          if(isFull(){
             System. out.printIn("Queue is  full");
           } else if(front == -1 && back == -1 ){
              front = back = 0;
              items[back] = itemVaalue;
           } else{
                back++;
                items[back] = itemValue;
                
           }
     }
     
      void deQueue(){
            if(isEmpty()){
                 System.out.printIn("Queue is empty . Nothing to dequeue");
            } else if ( front == back){
               front = back -1;
            } else { 
                 front++;
            }
        }
        
        void  display(){
               int i;
               
               if(isEmpty(){
                   system.out.printIn("Queue is empty");
               } else {
                   for(i = front, i<= back:i++){ 
                       System.out.printIn(items[i];
               }
               
            }
            
         }
         
           void peak(){
                System.out.printIn("Front value is : " + items [front]);
          
        }
        
      }
